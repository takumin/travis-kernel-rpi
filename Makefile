ARM32_CROSS_GCC              ?= arm-linux-gnueabihf-
ARM64_CROSS_GCC              ?= aarch64-linux-gnu-

ARM32_CROSS_ARCH             ?= arm
ARM64_CROSS_ARCH             ?= arm64

KERNEL_REPOSITORY            ?= https://github.com/raspberrypi/linux.git
KERNEL_BRANCH                ?= rpi-4.19.y

SOURCE_DIR                   ?= $(CURDIR)/source
BUILD_DIR                    ?= $(CURDIR)/build
DIST_DIR                     ?= $(CURDIR)/dist

KERNEL_SRC_DIR               ?= $(SOURCE_DIR)/$(KERNEL_BRANCH)
KERNEL_OBJ_DIR               ?= $(BUILD_DIR)/$(KERNEL_BRANCH)
KERNEL_DST_DIR               ?= $(DIST_DIR)/$(KERNEL_BRANCH)

BCM2708_OBJ_DIR              ?= $(KERNEL_OBJ_DIR)/bcm2708
BCM2709_OBJ_DIR              ?= $(KERNEL_OBJ_DIR)/bcm2709
BCM2711_OBJ_DIR              ?= $(KERNEL_OBJ_DIR)/bcm2711

BCM2708_DST_DIR              ?= $(KERNEL_DST_DIR)/bcm2708
BCM2709_DST_DIR              ?= $(KERNEL_DST_DIR)/bcm2709
BCM2711_DST_DIR              ?= $(KERNEL_DST_DIR)/bcm2711

BCM2708_ARM32_OBJ_DIR        ?= $(BCM2708_OBJ_DIR)/arm32
BCM2709_ARM32_OBJ_DIR        ?= $(BCM2709_OBJ_DIR)/arm32
BCM2709_ARM64_OBJ_DIR        ?= $(BCM2709_OBJ_DIR)/arm64
BCM2711_ARM32_OBJ_DIR        ?= $(BCM2711_OBJ_DIR)/arm32
BCM2711_ARM64_OBJ_DIR        ?= $(BCM2711_OBJ_DIR)/arm64

BCM2708_ARM32_DST_DIR        ?= $(BCM2708_DST_DIR)/arm32
BCM2709_ARM32_DST_DIR        ?= $(BCM2709_DST_DIR)/arm32
BCM2709_ARM64_DST_DIR        ?= $(BCM2709_DST_DIR)/arm64
BCM2711_ARM32_DST_DIR        ?= $(BCM2711_DST_DIR)/arm32
BCM2711_ARM64_DST_DIR        ?= $(BCM2711_DST_DIR)/arm64

BCM2708_ARM32_DEFCONFIG      ?= bcmrpi_defconfig
BCM2709_ARM32_DEFCONFIG      ?= bcm2709_defconfig
BCM2709_ARM64_DEFCONFIG      ?= bcmrpi3_defconfig
BCM2711_ARM32_DEFCONFIG      ?= bcm2711_defconfig
BCM2711_ARM64_DEFCONFIG      ?= bcm2711_defconfig

BCM2708_ARM32_CONFIG_TARGET  ?= $(BCM2708_ARM32_OBJ_DIR)/.config
BCM2709_ARM32_CONFIG_TARGET  ?= $(BCM2709_ARM32_OBJ_DIR)/.config
BCM2709_ARM64_CONFIG_TARGET  ?= $(BCM2709_ARM64_OBJ_DIR)/.config
BCM2711_ARM32_CONFIG_TARGET  ?= $(BCM2711_ARM32_OBJ_DIR)/.config
BCM2711_ARM64_CONFIG_TARGET  ?= $(BCM2711_ARM64_OBJ_DIR)/.config

BCM2708_ARM32_IMAGE_TARGET   ?= $(BCM2708_ARM32_OBJ_DIR)/arch/$(ARM32_CROSS_ARCH)/boot/Image
BCM2709_ARM32_IMAGE_TARGET   ?= $(BCM2709_ARM32_OBJ_DIR)/arch/$(ARM32_CROSS_ARCH)/boot/Image
BCM2709_ARM64_IMAGE_TARGET   ?= $(BCM2709_ARM64_OBJ_DIR)/arch/$(ARM64_CROSS_ARCH)/boot/Image
BCM2711_ARM32_IMAGE_TARGET   ?= $(BCM2711_ARM32_OBJ_DIR)/arch/$(ARM32_CROSS_ARCH)/boot/Image
BCM2711_ARM64_IMAGE_TARGET   ?= $(BCM2711_ARM64_OBJ_DIR)/arch/$(ARM64_CROSS_ARCH)/boot/Image

BCM2708_ARM32_MODULES_TARGET ?= $(BCM2708_ARM32_DST_DIR)/modules
BCM2709_ARM32_MODULES_TARGET ?= $(BCM2709_ARM32_DST_DIR)/modules
BCM2709_ARM64_MODULES_TARGET ?= $(BCM2709_ARM64_DST_DIR)/modules
BCM2711_ARM32_MODULES_TARGET ?= $(BCM2711_ARM32_DST_DIR)/modules
BCM2711_ARM64_MODULES_TARGET ?= $(BCM2711_ARM64_DST_DIR)/modules

PARALLEL                     ?= $(shell expr $(shell nproc) + 2)

.PHONY: default
default: build

$(SOURCE_DIR):
	@mkdir -p $@

$(KERNEL_SRC_DIR): $(SOURCE_DIR)
	@git clone --depth=1 --branch $(KERNEL_BRANCH) $(KERNEL_REPOSITORY) $@
	@git -C $@ reset --hard origin/$(KERNEL_BRANCH)

$(KERNEL_OBJ_DIR):
	@mkdir -p $@

$(KERNEL_DST_DIR):
	@mkdir -p $@

$(BCM2708_OBJ_DIR): $(KERNEL_OBJ_DIR)
	@mkdir -p $@

$(BCM2709_OBJ_DIR): $(KERNEL_OBJ_DIR)
	@mkdir -p $@

$(BCM2711_OBJ_DIR): $(KERNEL_OBJ_DIR)
	@mkdir -p $@

$(BCM2708_DST_DIR): $(KERNEL_DST_DIR)
	@mkdir -p $@

$(BCM2709_DST_DIR): $(KERNEL_DST_DIR)
	@mkdir -p $@

$(BCM2711_DST_DIR): $(KERNEL_DST_DIR)
	@mkdir -p $@

$(BCM2708_ARM32_OBJ_DIR): $(BCM2708_OBJ_DIR)
	@mkdir -p $@

$(BCM2709_ARM32_OBJ_DIR): $(BCM2709_OBJ_DIR)
	@mkdir -p $@

$(BCM2709_ARM64_OBJ_DIR): $(BCM2709_OBJ_DIR)
	@mkdir -p $@

$(BCM2711_ARM32_OBJ_DIR): $(BCM2711_OBJ_DIR)
	@mkdir -p $@

$(BCM2711_ARM64_OBJ_DIR): $(BCM2711_OBJ_DIR)
	@mkdir -p $@

$(BCM2708_ARM32_DST_DIR): $(BCM2708_DST_DIR)
	@mkdir -p $@

$(BCM2709_ARM32_DST_DIR): $(BCM2709_DST_DIR)
	@mkdir -p $@

$(BCM2709_ARM64_DST_DIR): $(BCM2709_DST_DIR)
	@mkdir -p $@

$(BCM2711_ARM32_DST_DIR): $(BCM2711_DST_DIR)
	@mkdir -p $@

$(BCM2711_ARM64_DST_DIR): $(BCM2711_DST_DIR)
	@mkdir -p $@

$(BCM2708_ARM32_CONFIG_TARGET): $(KERNEL_SRC_DIR) $(BCM2708_ARM32_OBJ_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2708_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		$(BCM2708_ARM32_DEFCONFIG)

$(BCM2709_ARM32_CONFIG_TARGET): $(KERNEL_SRC_DIR) $(BCM2709_ARM32_OBJ_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2709_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		$(BCM2709_ARM32_DEFCONFIG)

$(BCM2709_ARM64_CONFIG_TARGET): $(KERNEL_SRC_DIR) $(BCM2709_ARM64_OBJ_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2709_ARM64_OBJ_DIR) \
		ARCH=$(ARM64_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM64_CROSS_GCC) \
		$(BCM2709_ARM64_DEFCONFIG)

$(BCM2711_ARM32_CONFIG_TARGET): $(KERNEL_SRC_DIR) $(BCM2711_ARM32_OBJ_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2711_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		$(BCM2711_ARM32_DEFCONFIG)

$(BCM2711_ARM64_CONFIG_TARGET): $(KERNEL_SRC_DIR) $(BCM2711_ARM64_OBJ_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2711_ARM64_OBJ_DIR) \
		ARCH=$(ARM64_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM64_CROSS_GCC) \
		$(BCM2711_ARM64_DEFCONFIG)

$(BCM2708_ARM32_IMAGE_TARGET): $(BCM2708_ARM32_CONFIG_TARGET)
	@time $(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2708_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		zImage modules dtbs

$(BCM2709_ARM32_IMAGE_TARGET): $(BCM2709_ARM32_CONFIG_TARGET)
	@time $(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2709_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		zImage modules dtbs

$(BCM2709_ARM64_IMAGE_TARGET): $(BCM2709_ARM64_CONFIG_TARGET)
	@time $(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2709_ARM64_OBJ_DIR) \
		ARCH=$(ARM64_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM64_CROSS_GCC) \
		zImage modules dtbs

$(BCM2711_ARM32_IMAGE_TARGET): $(BCM2711_ARM32_CONFIG_TARGET)
	@time $(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2711_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		zImage modules dtbs

$(BCM2711_ARM64_IMAGE_TARGET): $(BCM2711_ARM64_CONFIG_TARGET)
	@time $(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2711_ARM64_OBJ_DIR) \
		ARCH=$(ARM64_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM64_CROSS_GCC) \
		zImage modules dtbs

$(BCM2708_ARM32_MODULES_TARGET): $(BCM2708_ARM32_IMAGE_TARGET) $(BCM2708_ARM32_DST_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2708_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		INSTALL_MOD_PATH=$@ \
		modules_install

$(BCM2709_ARM32_MODULES_TARGET): $(BCM2709_ARM32_IMAGE_TARGET) $(BCM2709_ARM32_DST_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2709_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		INSTALL_MOD_PATH=$@ \
		modules_install

$(BCM2709_ARM64_MODULES_TARGET): $(BCM2709_ARM64_IMAGE_TARGET) $(BCM2709_ARM64_DST_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2709_ARM64_OBJ_DIR) \
		ARCH=$(ARM64_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM64_CROSS_GCC) \
		INSTALL_MOD_PATH=$@ \
		modules_install

$(BCM2711_ARM32_MODULES_TARGET): $(BCM2711_ARM32_IMAGE_TARGET) $(BCM2711_ARM32_DST_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2711_ARM32_OBJ_DIR) \
		ARCH=$(ARM32_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM32_CROSS_GCC) \
		INSTALL_MOD_PATH=$@ \
		modules_install

$(BCM2711_ARM64_MODULES_TARGET): $(BCM2711_ARM64_IMAGE_TARGET) $(BCM2711_ARM64_DST_DIR)
	@$(MAKE) -C $(KERNEL_SRC_DIR) \
		-j $(PARALLEL) \
		O=$(BCM2711_ARM64_OBJ_DIR) \
		ARCH=$(ARM64_CROSS_ARCH) \
		CROSS_COMPILE=$(ARM64_CROSS_GCC) \
		INSTALL_MOD_PATH=$@ \
		modules_install

.PHONY: build
build: $(BCM2708_ARM32_MODULES_TARGET)

.PHONY: clean
clean:
	@rm -fr $(BUILD_DIR)
	@rm -fr $(DIST_DIR)
